/*****************************************************************************
 * Escenario1_Core0.c
 *****************************************************************************/

/*=============  I N C L U D E S   =============*/
/* Standard include Files */
#include <builtins.h>
#include <blackfin.h>
#include <stdio.h>
#include <string.h>
#include <ccblkfn.h>
/* Power Service includes */
#include <services/pwr/adi_pwr.h>
/* Interrupt Manager includes */
#include <services/int/adi_int.h>
/* SEC includes */
#include <services/int/adi_sec.h>
/* TWI driver includes */
#include <drivers/twi/adi_twi.h>
/* PPI driver includes */
#include <drivers/ppi/adi_ppi.h>
/* Encoder include file */
#include "encoder.h"
/* Video sensor include file */
#include "Sensor.h"
/*video analytic toolbox  include file*/
#include "adi_vat.h"
#include "adi_codec.h"
/* demo include file */
#include "BallTracking.h"
#include "finboard_bsp.h"

/* ADI initialization header */
#include "system/adi_initialize.h"
#include "adi_common.h"

uint32_t NumFilledFrames = 0;
/* Buffer to store the edge trace output */
#pragma alignment_region (32)
#pragma section ("sdram_bank4_A")
static uint8_t    EdgeTraceOut[INPUT_VIDEO_WIDTH*INPUT_VIDEO_HEIGHT*2];
#pragma alignment_region_end
uint32_t NumCameraBufsInQ;
uint32_t NumEncBufsInQ;
/* Buffer pointers for managing the input and output video*/
MT9M114_VIDEO_BUF *pLastEncBuf;
MT9M114_VIDEO_BUF *pNextEncBuf;
MT9M114_VIDEO_BUF *pEncDispStartBuf;
MT9M114_VIDEO_BUF *pCameraBufToSubmit;
MT9M114_VIDEO_BUF *pEncBufToSubmit;
MT9M114_VIDEO_BUF *pgfxBufToSubmit;
MT9M114_VIDEO_BUF *pProcessedEncBuf;
MT9M114_VIDEO_BUF *pLastCameraBuf;
/* Counter for PEC buffer processed */
uint32_t nPECProcCount=0;
uint32_t nEdgeTraceIndex = 0;
uint8_t *pEdgeTrace;
/* Switch for drawing the bounding rectangle */
extern volatile uint32_t nBoundingRectFlag;
#if defined(FINBOARD)
extern volatile uint32_t nIllumination;
uint32_t prevIllumination;
#endif
/* Video Frames, enlaces con el archivo Sensor.c
 * para almacenar las imagenes
 */
extern MT9M114_VIDEO_BUF VideoBuf0;
extern MT9M114_VIDEO_BUF VideoBuf1;
extern MT9M114_VIDEO_BUF VideoBuf2;
extern MT9M114_VIDEO_BUF VideoBuf3;
extern MT9M114_VIDEO_BUF VideoBuf4;
extern MT9M114_VIDEO_BUF VideoBuftemp;

MESSAGE_INFO *pMessageInfo;
/*
 * Buffer de comunicación entre el Core A y Core B
 */
extern unsigned char buffer[];
extern mcapi_status_t initialize_comms(void);


int main(int argc, char *argv[])
{
	/**
	 * Initialize managed drivers and/or services that have been added to 
	 * the project.
	 * @return zero on success 
	 */
	adi_initComponents();
	
	/**
	 * NO CORE 1 The default startup code does not include any functionality to allow
	 * core 0 to enable core 1. A convenient way to enable core 1 is to use the
	 * 'adi_core_1_enable' function. 
	 */
	//adi_core_1_enable();

	/* Begin adding your custom code here */

	return 0;
}

